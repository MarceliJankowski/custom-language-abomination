NAME
      BASIC-INTERPRETER - BASIC implementation of interpreter for custom language abomination written in TS

SYNOPSIS
      There are 2 ways of interacting with interpreter:
        - Using build-in npm scripts (npm start -- args...)
        - Directly executing main.ts / main.js after compillation

DESCRIPTION
      Read README.md for project description

USAGE
      In order to interact with interpreter user MUST provide 'interactionMethod' (provided through: 'r' and 'f' flags)
      For usage tips please go through codeExamples, they provide an array of various interpreter features in form of valid code ready for interpretation (hands-on is always best!)

OPTIONS
      -h
          Get help, print out the manual and exit with 0 exit code

      -v
          Turn on VERBOSE_MODE (increases output), mostly useful for debugging purposes
          Supplying additional 'v' option will enable ULTRA_VERBOSE_MODE (outputs everything, including prototype-chain)

      -e stage (possible values: ['l', 'lexer', 'p', 'parser', 'i', 'interpreter'])
          Execute interpreter up to a given 'stage' (useful for examining interpreter stages)
          Automatically turns on VERBOSE_MODE

      -r
          Interact with interpreter through REPL (set 'interactionMethod' to REPL)
          This flag cannot be present alongside 'f' flag, as they have contradicting behaviour

      -f filePath (when used with: 'npm start' it's relative to the project's home directory)
          Interpret/Evaluate file located at 'filePath' (set 'interactionMethod' to file)
          This flag cannot be present alongside 'r' flag, as they have contradicting behaviour

EXIT CODES
      Exit code indicates whether interpreter succeeded in evaluation or failed for some reason
      Different exit codes indicate different causes of interpreter failure
      Tip: you can easilly check exit code of the latest run command/script with: 'echo $?'

      0  Interpreter succeeded, no exceptions were raised

      1  Required argument is missing (like 'filePath' after '-f' flag)

      2  Provided argument is invalid

      3  Lexer failed, exception was raised during tokenization process

      4  Parser failed, exception was raised during AST build process

      5  Interpretation process failed, an exception was raised during AST evaluation

      6  Uncaught runtime exception

      255  Internal interpreter error / developer fu**ed up!
